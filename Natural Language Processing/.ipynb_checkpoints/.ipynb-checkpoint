{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "from bs4 import BeautifulSoup\n",
    "import requests\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "from nltk.tokenize import word_tokenize\n",
    "from nltk.stem import PorterStemmer\n",
    "from nltk import ngrams\n",
    "from nltk.util import ngrams"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "customer_review=[]\n",
    "customer_rating=[]\n",
    "customer_name=[]\n",
    "review_date=[]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "x=input(\"Enter Insurance Company\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "print(x)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "page_count = 0\n",
    "while page_count < 4:\n",
    "    \n",
    "    url = f\"https://www.consumeraffairs.com/finance/{x}?page=%s\" %(page_count)\n",
    "    page = requests.get(url)\n",
    "    soup = BeautifulSoup(page.content, 'html.parser')\n",
    "    reviews=soup.find(id=\"reviews-container\")\n",
    "    \n",
    "    comments=soup.find_all(\"div\", class_=\"rvw-bd ca-txt-bd-2\")\n",
    "    for ct in comments:\n",
    "        customer_review.append(ct.find(\"p\").get_text())\n",
    "    \n",
    "    star=reviews.find_all(\"div\",class_=\"rvw__hdr-stat\")\n",
    "    for st in star:\n",
    "        customer_rating.append(st.find(\"img\")[\"data-rating\"])\n",
    "\n",
    "    names=reviews.find_all(\"div\",class_=\"rvw-aut__inf\")\n",
    "    for n in names:\n",
    "        customer_name.append(n.find(\"strong\",class_=\"rvw-aut__inf-nm\").get_text())\n",
    "    \n",
    "    dates=reviews.find_all(\"div\",class_=\"rvw-bd ca-txt-bd-2\")\n",
    "    for d in dates:\n",
    "        review_date.append(d.find(\"span\", class_=\"ca-txt-cpt ca-txt--clr-gray\").get_text())\n",
    "    \n",
    "    page_count += 1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.1"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
